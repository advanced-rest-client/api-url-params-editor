/**
 * DO NOT EDIT
 *
 * This file was automatically generated by
 *   https://github.com/Polymer/gen-typescript-declarations
 *
 * To modify these typings, edit the source file(s):
 *   api-url-params-form.html
 */

/// <reference path="../polymer/types/polymer-element.d.ts" />
/// <reference path="../polymer/types/lib/elements/dom-if.d.ts" />
/// <reference path="../polymer/types/lib/elements/dom-repeat.d.ts" />
/// <reference path="../iron-flex-layout/iron-flex-layout.d.ts" />
/// <reference path="../iron-validatable-behavior/iron-validatable-behavior.d.ts" />
/// <reference path="../paper-checkbox/paper-checkbox.d.ts" />
/// <reference path="../iron-form/iron-form.d.ts" />
/// <reference path="../paper-icon-button/paper-icon-button.d.ts" />
/// <reference path="../iron-collapse/iron-collapse.d.ts" />
/// <reference path="../marked-element/marked-element.d.ts" />
/// <reference path="../api-property-form-item/api-property-form-item.d.ts" />
/// <reference path="../markdown-styles/markdown-styles.d.ts" />
/// <reference path="../paper-button/paper-button.d.ts" />
/// <reference path="../arc-icons/arc-icons.d.ts" />
/// <reference path="../iron-icon/iron-icon.d.ts" />
/// <reference path="../api-form-mixin/api-form-mixin.d.ts" />
/// <reference path="../api-form-mixin/api-form-styles.d.ts" />
/// <reference path="api-url-params-custom-input.d.ts" />

declare namespace ApiElements {

  /**
   * Renders form and input elements for query / uri model.
   *
   * Handles creation of form elements, validation, and rendering documentation.
   *
   * This element **requires** you to set `form-type` attribute to either
   * `uri` or `query` to distinguish type of form. Also, set `form-title`
   * property to render a title. It is useful when adding two forms right after
   * each other.
   *
   * ## Optional parameters
   *
   * By default the element renders all form valus. For better user experience,
   * set `allow-hide-optional` attribute to hide parameters that are optional.
   * It also renders checkbox to toggle optional parameters.
   *
   * Styling
   *
   * Custom property | Description | Default
   * ----------------|-------------|----------
   * `--api-url-params-form` | Mixin applied to this element | `{}`
   * `--api-url-params-form-row` | Mixin applied to each form row | `{}`
   * `--api-url-params-form-required` | Mixin applied to a form row that is required | `{}`
   * `--inline-documentation-color` | Color of the documentation when opened. | `rgba(0, 0, 0, 0.87)`
   * `--from-row-action-icon-color` | Color of the documentation icon | `--icon-button-color` or `rgba(0, 0, 0, 0.74)`
   * `--from-row-action-icon-color-hover` | Color of the documentation icon when hovering. Please, consider devices that do not support hovers. | `--accent-color` or `rgba(0, 0, 0, 0.74)`
   * `--inline-documentation-background-color` | Background color of opened documentation. | `#FFF3E0`
   * `--api-url-params-form-array-parameter` | Mixin applied to a container of a parameter that is an array | `{}`
   * `--api-url-params-editor-editor-subheader` | Mixin applied to the form header element | `{}`
   * `--api-url-params-editor-optional-checkbox-label-color,` | Label color of toggle optional checkbox | `rgba(0, 0, 0, 0.74)`
   * `--api-url-params-form-enable-checkbox-margin-top` | Margin top of the toggle checkbox | `32px`
   * `--api-url-params-form-enable-checkbox-array-margin-top` | Margin top of the toggle checkbox when the item is an array | `40px`
   * `--api-url-params-form-hint-icon-margin-top` | Margin top of the "help" icon | `16px`
   * `--api-url-params-form-hint-icon-array-margin-top` | Margin top of the "help" icon when the item is an array| `24px`
   * `--hint-trigger-color` | Color of the help icon | `rgba(0, 0, 0, 0.74)`
   * `--hint-trigger-hover-color` | Color of the help icon when hovering | `rgba(0, 0, 0, 0.88)`
   * `--icon-button` | Mixin applied to all icon buttons | `{}`
   * `--icon-button-hover` | Mixin applied to all icon buttons when hovering | `{}`
   *
   * You can also style inputs as defined in
   * [api-property-form-item](https://github.com/advanced-rest-client/api-property-form-item)
   * element documentation.
   */
  class ApiUrlParamsForm extends
    Polymer.IronValidatableBehavior(
    ArcBehaviors.ApiFormMixin(
    Polymer.Element)) {

    /**
     * The form can display query or URI parameters. When anything change in the form
     * it will send a corresponding custom event (`query-parameter-changed` or
     * `uri-parameter-changed`). To make this happen set the value of this property to
     * either `query` or `uri`.
     */
    formType: string|null|undefined;

    /**
     * Title do render
     */
    formTitle: string|null|undefined;

    /**
     * Generated ID of the title element.
     */
    _titleId: string|null|undefined;

    /**
     * Prohibits rendering of the documentation (the icon and the
     * description).
     */
    noDocs: boolean|null|undefined;

    /**
     * attribute automatically, which should be used for styling.
     */
    _getValidity(): any;
    _computeIsCustom(schema: any): any;
    connectedCallback(): void;

    /**
     * Generates ``
     *
     * @returns [description]
     */
    _generateTitleId(): any;

    /**
     * Computes array class for the input element.
     */
    _computeTypeClass(isArray: any): any;

    /**
     * Opens the documentation for item.
     */
    _openDocs(e: any): void;

    /**
     * Computes documentation as a markdown to be placed in the `marked-element`
     *
     * @param item View model
     */
    _computeDocumentation(item: object|null): any;

    /**
     * Computes if model item has documentation to display.
     *
     * @param item Model item
     * @returns True if documentation can be rendered.
     */
    _computeHasDocumentation(noDocs: any, item: object|null): Boolean|null;

    /**
     * Adds custom property to the list.
     */
    add(): void;
  }
}

interface HTMLElementTagNameMap {
  "api-url-params-form": ApiElements.ApiUrlParamsForm;
}
