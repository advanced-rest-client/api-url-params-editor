/**
 * DO NOT EDIT
 *
 * This file was automatically generated by
 *   https://github.com/Polymer/gen-typescript-declarations
 *
 * To modify these typings, edit the source file(s):
 *   api-url-params-form.html
 */

/// <reference path="../polymer/types/polymer-element.d.ts" />
/// <reference path="../polymer/types/lib/elements/dom-if.d.ts" />
/// <reference path="../polymer/types/lib/elements/dom-repeat.d.ts" />
/// <reference path="../iron-flex-layout/iron-flex-layout.d.ts" />
/// <reference path="../iron-validatable-behavior/iron-validatable-behavior.d.ts" />
/// <reference path="../paper-checkbox/paper-checkbox.d.ts" />
/// <reference path="../iron-form/iron-form.d.ts" />
/// <reference path="../paper-icon-button/paper-icon-button.d.ts" />
/// <reference path="../iron-collapse/iron-collapse.d.ts" />
/// <reference path="../marked-element/marked-element.d.ts" />
/// <reference path="../api-property-form-item/api-property-form-item.d.ts" />

declare namespace ApiElements {

  class ApiUrlParamsForm extends
    Polymer.IronValidatableBehavior(
    Polymer.Element) {

    /**
     * View model to use to render the form.
     * See `api-url-params-editor` element for more information.
     */
    model: any[]|null|undefined;

    /**
     * Computed value, set to true to show optional parameters (not required by the API)
     */
    optionalOpened: boolean|null|undefined;

    /**
     * The form can display query or URI parameters. When anything change in the form
     * it will send a corresponding custom event (`query-parameter-changed` or
     * `uri-parameter-changed`). To make this happen set the value of this property to
     * either `query` or `uri`.
     */
    formType: string|null|undefined;

    /**
     * Computed value. True if current query parameters set has any
     * optional value.
     */
    readonly hasOptional: boolean|null|undefined;

    /**
     * If set it computes `hasOptional` property and shows checkbox
     * to show / hide optional properties.
     */
    allowHideOptional: boolean|null|undefined;

    /**
     * Computed flag to determine if optional checkbox can be rendered
     */
    readonly _renderOptionalCheckbox: boolean|null|undefined;

    /**
     * Title do render
     */
    formTitle: string|null|undefined;

    /**
     * Generated ID of the title element.
     */
    _titleId: string|null|undefined;
    connectedCallback(): void;

    /**
     * Generates ``
     *
     * @returns [description]
     */
    _generateTitleId(): any;

    /**
     * Computes class name for each row depending on the item.
     *
     * @param item Model item
     * @param optionalOpened True if optional parameters are rendered.
     */
    _computeRowClass(item: object|null, allowHideOptional: Boolean|null, optionalOpened: Boolean|null): String|null;

    /**
     * Computes array class for the input element.
     */
    _computeTypeClass(isArray: any): any;

    /**
     * Toggles visibility of optional parameters.
     */
    toggleOptionalParams(): void;

    /**
     * Returns a reference to the form element, if the DOM is ready.
     *
     * @returns Iron form element
     */
    _getForm(): IronForm|null;

    /**
     * attribute automatically, which should be used for styling.
     */
    _getValidity(): any;

    /**
     * Link to the form's serialize function.
     */
    serializeForm(): any;

    /**
     * Opens the documentation for item.
     */
    _openDocs(e: any): void;

    /**
     * Computes if any of the query parameters are required.
     */
    _computeHasOptionalParameters(allowHideOptional: any, model: any): any;
    _computeRenderCheckbox(render: any, has: any): any;
  }
}

interface HTMLElementTagNameMap {
  "api-url-params-form": ApiElements.ApiUrlParamsForm;
}
