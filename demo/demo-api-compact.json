{
  "@context": {
    "raml-http": "http://a.ml/vocabularies/http#",
    "shacl": "http://www.w3.org/ns/shacl#",
    "raml-shapes": "http://a.ml/vocabularies/shapes#",
    "security": "http://a.ml/vocabularies/security#",
    "rdfs": "http://www.w3.org/2000/01/rdf-schema#",
    "data": "http://a.ml/vocabularies/data#",
    "doc": "http://a.ml/vocabularies/document#",
    "schema-org": "http://schema.org/",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "hydra": "http://www.w3.org/ns/hydra/core#"
  },
  "@id": "amf://id",
  "@type": [
    "doc:Document",
    "doc:Fragment",
    "doc:Module",
    "doc:Unit"
  ],
  "doc:declares": [
    {
      "@id": "amf://id#1",
      "@type": [
        "doc:Trait",
        "doc:AbstractDeclaration",
        "doc:DomainElement"
      ],
      "doc:dataNode": {
        "@id": "amf://id#2",
        "@type": "data:Object",
        "data:queryParameters": {
          "@id": "file://demo/demo-api/demo-api.raml#/declarations/traits/paginated/object_1/object_2",
          "@type": "data:Object",
          "data:limit": {
            "@id": "file://demo/demo-api/demo-api.raml#/declarations/traits/paginated/object_1/object_2/object_3",
            "@type": "data:Object",
            "data:default": {
              "@id": "file://demo/demo-api/demo-api.raml#/declarations/traits/paginated/object_1/object_2/object_3/scalar_9",
              "@type": "data:Scalar",
              "data:value": {
                "@type": "xsd:integer",
                "@value": "25"
              }
            },
            "data:description": {
              "@id": "file://demo/demo-api/demo-api.raml#/declarations/traits/paginated/object_1/object_2/object_3/scalar_5",
              "@type": "data:Scalar",
              "data:value": {
                "@type": "xsd:string",
                "@value": "Limit in the response list"
              }
            },
            "data:example": {
              "@id": "file://demo/demo-api/demo-api.raml#/declarations/traits/paginated/object_1/object_2/object_3/scalar_8",
              "@type": "data:Scalar",
              "data:value": {
                "@type": "xsd:integer",
                "@value": "100"
              }
            },
            "data:maximum": {
              "@id": "file://demo/demo-api/demo-api.raml#/declarations/traits/paginated/object_1/object_2/object_3/scalar_6",
              "@type": "data:Scalar",
              "data:value": {
                "@type": "xsd:integer",
                "@value": "300"
              }
            },
            "data:minimum": {
              "@id": "file://demo/demo-api/demo-api.raml#/declarations/traits/paginated/object_1/object_2/object_3/scalar_7",
              "@type": "data:Scalar",
              "data:value": {
                "@type": "xsd:integer",
                "@value": "1"
              }
            },
            "data:type": {
              "@id": "file://demo/demo-api/demo-api.raml#/declarations/traits/paginated/object_1/object_2/object_3/scalar_4",
              "@type": "data:Scalar",
              "data:value": {
                "@type": "xsd:string",
                "@value": "number"
              }
            }
          },
          "data:nextPageToken": {
            "@id": "file://demo/demo-api/demo-api.raml#/declarations/traits/paginated/object_1/object_2/object_16",
            "@type": "data:Object",
            "data:description": {
              "@id": "file://demo/demo-api/demo-api.raml#/declarations/traits/paginated/object_1/object_2/object_16/scalar_19",
              "@type": "data:Scalar",
              "data:value": {
                "@type": "xsd:string",
                "@value": "The `nextPageToken` is a web safe encoded cursor to the next entry in the database.\nIt can be obtained by requesting paginated resource and used in next request to get\nnext results page.\n"
              }
            },
            "data:displayName": {
              "@id": "file://demo/demo-api/demo-api.raml#/declarations/traits/paginated/object_1/object_2/object_16/scalar_21",
              "@type": "data:Scalar",
              "data:value": {
                "@type": "xsd:string",
                "@value": "Page token"
              }
            },
            "data:example": {
              "@id": "file://demo/demo-api/demo-api.raml#/declarations/traits/paginated/object_1/object_2/object_16/scalar_18",
              "@type": "data:Scalar",
              "data:value": {
                "@type": "xsd:string",
                "@value": "CiAKGjBpNDd2Nmp2Zml2cXRwYjBpOXA"
              }
            },
            "data:pattern": {
              "@id": "file://demo/demo-api/demo-api.raml#/declarations/traits/paginated/object_1/object_2/object_16/scalar_20",
              "@type": "data:Scalar",
              "data:value": {
                "@type": "xsd:string",
                "@value": "[a-zA-Z0-9]+"
              }
            },
            "data:type": {
              "@id": "file://demo/demo-api/demo-api.raml#/declarations/traits/paginated/object_1/object_2/object_16/scalar_17",
              "@type": "data:Scalar",
              "data:value": {
                "@type": "xsd:string",
                "@value": "string"
              }
            }
          },
          "data:start": {
            "@id": "file://demo/demo-api/demo-api.raml#/declarations/traits/paginated/object_1/object_2/object_10",
            "@type": "data:Object",
            "data:default": {
              "@id": "file://demo/demo-api/demo-api.raml#/declarations/traits/paginated/object_1/object_2/object_10/scalar_15",
              "@type": "data:Scalar",
              "data:value": {
                "@type": "xsd:integer",
                "@value": "0"
              }
            },
            "data:description": {
              "@id": "file://demo/demo-api/demo-api.raml#/declarations/traits/paginated/object_1/object_2/object_10/scalar_12",
              "@type": "data:Scalar",
              "data:value": {
                "@type": "xsd:string",
                "@value": "The start entry of the list"
              }
            },
            "data:example": {
              "@id": "file://demo/demo-api/demo-api.raml#/declarations/traits/paginated/object_1/object_2/object_10/scalar_14",
              "@type": "data:Scalar",
              "data:value": {
                "@type": "xsd:integer",
                "@value": "25"
              }
            },
            "data:minimum": {
              "@id": "file://demo/demo-api/demo-api.raml#/declarations/traits/paginated/object_1/object_2/object_10/scalar_13",
              "@type": "data:Scalar",
              "data:value": {
                "@type": "xsd:integer",
                "@value": "0"
              }
            },
            "data:type": {
              "@id": "file://demo/demo-api/demo-api.raml#/declarations/traits/paginated/object_1/object_2/object_10/scalar_11",
              "@type": "data:Scalar",
              "data:value": {
                "@type": "xsd:string",
                "@value": "number"
              }
            }
          }
        }
      },
      "schema-org:name": "paginated"
    },
    {
      "@id": "amf://id#16",
      "@type": [
        "raml-shapes:ArrayShape",
        "shacl:Shape",
        "raml-shapes:Shape",
        "doc:DomainElement"
      ],
      "raml-shapes:items": {
        "@id": "amf://id#17",
        "@type": [
          "raml-shapes:ScalarShape",
          "shacl:Shape",
          "raml-shapes:Shape",
          "doc:DomainElement"
        ],
        "shacl:datatype": {
          "@id": "xsd:string"
        }
      },
      "shacl:name": "amf_inline_type_1"
    }
  ],
  "doc:encodes": {
    "@id": "amf://id#4",
    "@type": [
      "schema-org:WebAPI",
      "doc:RootDomainElement",
      "doc:DomainElement"
    ],
    "raml-http:endpoint": {
      "@id": "amf://id#5",
      "@type": [
        "raml-http:EndPoint",
        "doc:DomainElement"
      ],
      "doc:extends": {
        "@id": "amf://id#6",
        "@type": [
          "doc:ParametrizedTrait",
          "doc:ParametrizedDeclaration",
          "doc:DomainElement"
        ],
        "doc:target": {
          "@id": "amf://id#1",
          "@type": [
            "doc:Trait",
            "doc:AbstractDeclaration",
            "doc:DomainElement"
          ],
          "doc:dataNode": {
            "@id": "amf://id#2",
            "@type": "data:Object",
            "data:queryParameters": {
              "@id": "file://demo/demo-api/demo-api.raml#/declarations/traits/paginated/object_1/object_2",
              "@type": "data:Object",
              "data:limit": {
                "@id": "file://demo/demo-api/demo-api.raml#/declarations/traits/paginated/object_1/object_2/object_3",
                "@type": "data:Object",
                "data:default": {
                  "@id": "file://demo/demo-api/demo-api.raml#/declarations/traits/paginated/object_1/object_2/object_3/scalar_9",
                  "@type": "data:Scalar",
                  "data:value": {
                    "@type": "xsd:integer",
                    "@value": "25"
                  }
                },
                "data:description": {
                  "@id": "file://demo/demo-api/demo-api.raml#/declarations/traits/paginated/object_1/object_2/object_3/scalar_5",
                  "@type": "data:Scalar",
                  "data:value": {
                    "@type": "xsd:string",
                    "@value": "Limit in the response list"
                  }
                },
                "data:example": {
                  "@id": "file://demo/demo-api/demo-api.raml#/declarations/traits/paginated/object_1/object_2/object_3/scalar_8",
                  "@type": "data:Scalar",
                  "data:value": {
                    "@type": "xsd:integer",
                    "@value": "100"
                  }
                },
                "data:maximum": {
                  "@id": "file://demo/demo-api/demo-api.raml#/declarations/traits/paginated/object_1/object_2/object_3/scalar_6",
                  "@type": "data:Scalar",
                  "data:value": {
                    "@type": "xsd:integer",
                    "@value": "300"
                  }
                },
                "data:minimum": {
                  "@id": "file://demo/demo-api/demo-api.raml#/declarations/traits/paginated/object_1/object_2/object_3/scalar_7",
                  "@type": "data:Scalar",
                  "data:value": {
                    "@type": "xsd:integer",
                    "@value": "1"
                  }
                },
                "data:type": {
                  "@id": "file://demo/demo-api/demo-api.raml#/declarations/traits/paginated/object_1/object_2/object_3/scalar_4",
                  "@type": "data:Scalar",
                  "data:value": {
                    "@type": "xsd:string",
                    "@value": "number"
                  }
                }
              },
              "data:nextPageToken": {
                "@id": "file://demo/demo-api/demo-api.raml#/declarations/traits/paginated/object_1/object_2/object_16",
                "@type": "data:Object",
                "data:description": {
                  "@id": "file://demo/demo-api/demo-api.raml#/declarations/traits/paginated/object_1/object_2/object_16/scalar_19",
                  "@type": "data:Scalar",
                  "data:value": {
                    "@type": "xsd:string",
                    "@value": "The `nextPageToken` is a web safe encoded cursor to the next entry in the database.\nIt can be obtained by requesting paginated resource and used in next request to get\nnext results page.\n"
                  }
                },
                "data:displayName": {
                  "@id": "file://demo/demo-api/demo-api.raml#/declarations/traits/paginated/object_1/object_2/object_16/scalar_21",
                  "@type": "data:Scalar",
                  "data:value": {
                    "@type": "xsd:string",
                    "@value": "Page token"
                  }
                },
                "data:example": {
                  "@id": "file://demo/demo-api/demo-api.raml#/declarations/traits/paginated/object_1/object_2/object_16/scalar_18",
                  "@type": "data:Scalar",
                  "data:value": {
                    "@type": "xsd:string",
                    "@value": "CiAKGjBpNDd2Nmp2Zml2cXRwYjBpOXA"
                  }
                },
                "data:pattern": {
                  "@id": "file://demo/demo-api/demo-api.raml#/declarations/traits/paginated/object_1/object_2/object_16/scalar_20",
                  "@type": "data:Scalar",
                  "data:value": {
                    "@type": "xsd:string",
                    "@value": "[a-zA-Z0-9]+"
                  }
                },
                "data:type": {
                  "@id": "file://demo/demo-api/demo-api.raml#/declarations/traits/paginated/object_1/object_2/object_16/scalar_17",
                  "@type": "data:Scalar",
                  "data:value": {
                    "@type": "xsd:string",
                    "@value": "string"
                  }
                }
              },
              "data:start": {
                "@id": "file://demo/demo-api/demo-api.raml#/declarations/traits/paginated/object_1/object_2/object_10",
                "@type": "data:Object",
                "data:default": {
                  "@id": "file://demo/demo-api/demo-api.raml#/declarations/traits/paginated/object_1/object_2/object_10/scalar_15",
                  "@type": "data:Scalar",
                  "data:value": {
                    "@type": "xsd:integer",
                    "@value": "0"
                  }
                },
                "data:description": {
                  "@id": "file://demo/demo-api/demo-api.raml#/declarations/traits/paginated/object_1/object_2/object_10/scalar_12",
                  "@type": "data:Scalar",
                  "data:value": {
                    "@type": "xsd:string",
                    "@value": "The start entry of the list"
                  }
                },
                "data:example": {
                  "@id": "file://demo/demo-api/demo-api.raml#/declarations/traits/paginated/object_1/object_2/object_10/scalar_14",
                  "@type": "data:Scalar",
                  "data:value": {
                    "@type": "xsd:integer",
                    "@value": "25"
                  }
                },
                "data:minimum": {
                  "@id": "file://demo/demo-api/demo-api.raml#/declarations/traits/paginated/object_1/object_2/object_10/scalar_13",
                  "@type": "data:Scalar",
                  "data:value": {
                    "@type": "xsd:integer",
                    "@value": "0"
                  }
                },
                "data:type": {
                  "@id": "file://demo/demo-api/demo-api.raml#/declarations/traits/paginated/object_1/object_2/object_10/scalar_11",
                  "@type": "data:Scalar",
                  "data:value": {
                    "@type": "xsd:string",
                    "@value": "number"
                  }
                }
              }
            }
          },
          "schema-org:name": "paginated"
        },
        "schema-org:name": "paginated"
      },
      "raml-http:parameter": {
        "@id": "amf://id#37",
        "@type": [
          "raml-http:Parameter",
          "doc:DomainElement"
        ],
        "raml-http:binding": "path",
        "raml-http:paramName": "pathParam",
        "raml-http:schema": {
          "@id": "amf://id#38",
          "@type": [
            "raml-shapes:ScalarShape",
            "shacl:Shape",
            "raml-shapes:Shape",
            "doc:DomainElement"
          ],
          "schema-org:description": "This is test description with `markup`.\nThis value can be one of:\n- `value1`\n- `value2`\n- `value3`\n",
          "schema-org:name": "Path parameter",
          "shacl:datatype": {
            "@id": "xsd:string"
          },
          "shacl:in": {
            "@id": "amf://id#38/list",
            "@type": "rdfs:Seq",
            "rdfs:_1": {
              "@id": "amf://id#39",
              "@type": "data:Scalar",
              "data:value": {
                "@type": "xsd:string",
                "@value": "value1"
              }
            },
            "rdfs:_2": {
              "@id": "amf://id#40",
              "@type": "data:Scalar",
              "data:value": {
                "@type": "xsd:string",
                "@value": "value2"
              }
            },
            "rdfs:_3": {
              "@id": "amf://id#41",
              "@type": "data:Scalar",
              "data:value": {
                "@type": "xsd:string",
                "@value": "value3"
              }
            }
          },
          "shacl:name": "schema"
        },
        "schema-org:description": "This is test description with `markup`.\nThis value can be one of:\n- `value1`\n- `value2`\n- `value3`\n",
        "schema-org:name": "pathParam",
        "hydra:required": true
      },
      "raml-http:path": "/simple/{pathParam}",
      "hydra:supportedOperation": {
        "@id": "amf://id#7",
        "@type": [
          "hydra:Operation",
          "doc:DomainElement"
        ],
        "hydra:expects": {
          "@id": "amf://id#8",
          "@type": [
            "raml-http:Request",
            "doc:DomainElement"
          ],
          "raml-http:parameter": [
            {
              "@id": "amf://id#9",
              "@type": [
                "raml-http:Parameter",
                "doc:DomainElement"
              ],
              "raml-http:binding": "query",
              "raml-http:paramName": "limit",
              "raml-http:schema": {
                "@id": "amf://id#10",
                "@type": [
                  "raml-shapes:ScalarShape",
                  "shacl:Shape",
                  "raml-shapes:Shape",
                  "doc:DomainElement"
                ],
                "doc:examples": {
                  "@id": "amf://id#12",
                  "@type": [
                    "doc:Example",
                    "doc:DomainElement"
                  ],
                  "doc:strict": true,
                  "doc:structuredValue": {
                    "@id": "amf://id#13",
                    "@type": "data:Scalar",
                    "data:value": {
                      "@type": "xsd:integer",
                      "@value": "100"
                    }
                  },
                  "http://a.ml/vocabularies/document-source-maps#sources": {
                    "@id": "amf://id#12/source-map",
                    "@type": "http://a.ml/vocabularies/document-source-maps#SourceMap",
                    "http://a.ml/vocabularies/document-source-maps#tracked-element": {
                      "http://a.ml/vocabularies/document-source-maps#element": "amf://id#12",
                      "http://a.ml/vocabularies/document-source-maps#value": "amf://id#14"
                    }
                  },
                  "shacl:raw": "100"
                },
                "schema-org:description": "Limit in the response list",
                "shacl:datatype": {
                  "@id": "raml-shapes:number"
                },
                "shacl:defaultValue": {
                  "@id": "amf://id#11",
                  "@type": "data:Scalar",
                  "data:value": {
                    "@type": "xsd:integer",
                    "@value": "25"
                  }
                },
                "shacl:defaultValueStr": "25",
                "shacl:maxInclusive": 300,
                "shacl:minInclusive": 1,
                "shacl:name": "schema"
              },
              "schema-org:description": "Limit in the response list",
              "schema-org:name": "limit",
              "hydra:required": true
            },
            {
              "@id": "amf://id#15",
              "@type": [
                "raml-http:Parameter",
                "doc:DomainElement"
              ],
              "raml-http:binding": "query",
              "raml-http:paramName": "items",
              "raml-http:schema": {
                "@id": "amf://id#16/linked_1",
                "@type": [
                  "raml-shapes:ArrayShape",
                  "shacl:Shape",
                  "raml-shapes:Shape",
                  "doc:DomainElement"
                ],
                "doc:link-label": "amf_inline_type_1",
                "doc:link-target": {
                  "@id": "amf://id#16"
                }
              },
              "schema-org:name": "items",
              "hydra:required": true
            },
            {
              "@id": "amf://id#18",
              "@type": [
                "raml-http:Parameter",
                "doc:DomainElement"
              ],
              "raml-http:binding": "query",
              "raml-http:paramName": "paramString",
              "raml-http:schema": {
                "@id": "amf://id#19",
                "@type": [
                  "raml-shapes:ScalarShape",
                  "shacl:Shape",
                  "raml-shapes:Shape",
                  "doc:DomainElement"
                ],
                "schema-org:name": "String value",
                "shacl:datatype": {
                  "@id": "xsd:string"
                },
                "shacl:name": "schema"
              },
              "schema-org:name": "paramString",
              "hydra:required": true
            },
            {
              "@id": "amf://id#20",
              "@type": [
                "raml-http:Parameter",
                "doc:DomainElement"
              ],
              "raml-http:binding": "query",
              "raml-http:paramName": "param_number",
              "raml-http:schema": {
                "@id": "amf://id#21",
                "@type": [
                  "raml-shapes:ScalarShape",
                  "shacl:Shape",
                  "raml-shapes:Shape",
                  "doc:DomainElement"
                ],
                "shacl:datatype": {
                  "@id": "raml-shapes:number"
                },
                "shacl:maxInclusive": 100,
                "shacl:minInclusive": 20,
                "shacl:name": "schema"
              },
              "schema-org:name": "param_number",
              "hydra:required": true
            },
            {
              "@id": "amf://id#22",
              "@type": [
                "raml-http:Parameter",
                "doc:DomainElement"
              ],
              "raml-http:binding": "query",
              "raml-http:paramName": "a",
              "raml-http:schema": {
                "@id": "amf://id#23",
                "@type": [
                  "raml-shapes:ScalarShape",
                  "shacl:Shape",
                  "raml-shapes:Shape",
                  "doc:DomainElement"
                ],
                "shacl:datatype": {
                  "@id": "xsd:string"
                },
                "shacl:name": "schema"
              },
              "schema-org:name": "a",
              "hydra:required": true
            },
            {
              "@id": "amf://id#24",
              "@type": [
                "raml-http:Parameter",
                "doc:DomainElement"
              ],
              "raml-http:binding": "query",
              "raml-http:paramName": "b",
              "raml-http:schema": {
                "@id": "amf://id#25",
                "@type": [
                  "raml-shapes:ScalarShape",
                  "shacl:Shape",
                  "raml-shapes:Shape",
                  "doc:DomainElement"
                ],
                "shacl:datatype": {
                  "@id": "xsd:string"
                },
                "shacl:name": "schema"
              },
              "schema-org:name": "b",
              "hydra:required": true
            },
            {
              "@id": "amf://id#26",
              "@type": [
                "raml-http:Parameter",
                "doc:DomainElement"
              ],
              "raml-http:binding": "query",
              "raml-http:paramName": "start",
              "raml-http:schema": {
                "@id": "amf://id#27",
                "@type": [
                  "raml-shapes:ScalarShape",
                  "shacl:Shape",
                  "raml-shapes:Shape",
                  "doc:DomainElement"
                ],
                "doc:examples": {
                  "@id": "amf://id#29",
                  "@type": [
                    "doc:Example",
                    "doc:DomainElement"
                  ],
                  "doc:strict": true,
                  "doc:structuredValue": {
                    "@id": "amf://id#30",
                    "@type": "data:Scalar",
                    "data:value": {
                      "@type": "xsd:integer",
                      "@value": "25"
                    }
                  },
                  "http://a.ml/vocabularies/document-source-maps#sources": {
                    "@id": "amf://id#29/source-map",
                    "@type": "http://a.ml/vocabularies/document-source-maps#SourceMap",
                    "http://a.ml/vocabularies/document-source-maps#tracked-element": {
                      "http://a.ml/vocabularies/document-source-maps#element": "amf://id#29",
                      "http://a.ml/vocabularies/document-source-maps#value": "amf://id#31"
                    }
                  },
                  "shacl:raw": "25"
                },
                "schema-org:description": "The start entry of the list",
                "shacl:datatype": {
                  "@id": "raml-shapes:number"
                },
                "shacl:defaultValue": {
                  "@id": "amf://id#28",
                  "@type": "data:Scalar",
                  "data:value": {
                    "@type": "xsd:integer",
                    "@value": "0"
                  }
                },
                "shacl:defaultValueStr": "0",
                "shacl:minInclusive": 0,
                "shacl:name": "schema"
              },
              "schema-org:description": "The start entry of the list",
              "schema-org:name": "start",
              "hydra:required": true
            },
            {
              "@id": "amf://id#32",
              "@type": [
                "raml-http:Parameter",
                "doc:DomainElement"
              ],
              "raml-http:binding": "query",
              "raml-http:paramName": "nextPageToken",
              "raml-http:schema": {
                "@id": "amf://id#33",
                "@type": [
                  "raml-shapes:ScalarShape",
                  "shacl:Shape",
                  "raml-shapes:Shape",
                  "doc:DomainElement"
                ],
                "doc:examples": {
                  "@id": "amf://id#34",
                  "@type": [
                    "doc:Example",
                    "doc:DomainElement"
                  ],
                  "doc:strict": true,
                  "doc:structuredValue": {
                    "@id": "amf://id#35",
                    "@type": "data:Scalar",
                    "data:value": {
                      "@type": "xsd:string",
                      "@value": "CiAKGjBpNDd2Nmp2Zml2cXRwYjBpOXA"
                    }
                  },
                  "http://a.ml/vocabularies/document-source-maps#sources": {
                    "@id": "amf://id#34/source-map",
                    "@type": "http://a.ml/vocabularies/document-source-maps#SourceMap",
                    "http://a.ml/vocabularies/document-source-maps#tracked-element": {
                      "http://a.ml/vocabularies/document-source-maps#element": "amf://id#34",
                      "http://a.ml/vocabularies/document-source-maps#value": "amf://id#36"
                    }
                  },
                  "shacl:raw": "CiAKGjBpNDd2Nmp2Zml2cXRwYjBpOXA"
                },
                "schema-org:description": "The `nextPageToken` is a web safe encoded cursor to the next entry in the database.\nIt can be obtained by requesting paginated resource and used in next request to get\nnext results page.\n",
                "schema-org:name": "Page token",
                "shacl:datatype": {
                  "@id": "xsd:string"
                },
                "shacl:name": "schema",
                "shacl:pattern": "^[a-zA-Z0-9]+$"
              },
              "schema-org:description": "The `nextPageToken` is a web safe encoded cursor to the next entry in the database.\nIt can be obtained by requesting paginated resource and used in next request to get\nnext results page.\n",
              "schema-org:name": "nextPageToken",
              "hydra:required": true
            }
          ]
        },
        "hydra:method": "get"
      }
    },
    "raml-http:server": {
      "@id": "amf://id#42",
      "@type": [
        "raml-http:Server",
        "doc:DomainElement"
      ],
      "raml-http:url": "http://{host}.api.domain.com:8254/{apiVersion}/",
      "raml-http:variable": [
        {
          "@id": "amf://id#43",
          "@type": [
            "raml-http:Parameter",
            "doc:DomainElement"
          ],
          "raml-http:binding": "path",
          "raml-http:paramName": "host",
          "raml-http:schema": {
            "@id": "amf://id#44",
            "@type": [
              "raml-shapes:ScalarShape",
              "shacl:Shape",
              "raml-shapes:Shape",
              "doc:DomainElement"
            ],
            "schema-org:description": "Either `production` or `development`",
            "shacl:datatype": {
              "@id": "xsd:string"
            },
            "shacl:name": "schema",
            "shacl:pattern": "^(production|development)$"
          },
          "schema-org:description": "Either `production` or `development`",
          "schema-org:name": "host",
          "hydra:required": true
        },
        {
          "@id": "amf://id#45",
          "@type": [
            "raml-http:Parameter",
            "doc:DomainElement"
          ],
          "raml-http:binding": "path",
          "raml-http:paramName": "apiVersion",
          "raml-http:schema": {
            "@id": "amf://id#46",
            "@type": [
              "raml-shapes:ScalarShape",
              "shacl:Shape",
              "raml-shapes:Shape",
              "doc:DomainElement"
            ],
            "schema-org:description": "API documentation version.\nCan be any of:\n- `1` - deprecated\n- `2` - scheduled to deprecate\n- `3` - current\n",
            "schema-org:name": "API version",
            "shacl:datatype": {
              "@id": "xsd:integer"
            },
            "shacl:in": {
              "@id": "amf://id#46/list",
              "@type": "rdfs:Seq",
              "rdfs:_1": {
                "@id": "amf://id#47",
                "@type": "data:Scalar",
                "data:value": {
                  "@type": "xsd:integer",
                  "@value": "1"
                }
              },
              "rdfs:_2": {
                "@id": "amf://id#48",
                "@type": "data:Scalar",
                "data:value": {
                  "@type": "xsd:integer",
                  "@value": "2"
                }
              },
              "rdfs:_3": {
                "@id": "amf://id#49",
                "@type": "data:Scalar",
                "data:value": {
                  "@type": "xsd:integer",
                  "@value": "3"
                }
              }
            },
            "shacl:name": "schema"
          },
          "schema-org:description": "API documentation version.\nCan be any of:\n- `1` - deprecated\n- `2` - scheduled to deprecate\n- `3` - current\n",
          "schema-org:name": "apiVersion",
          "hydra:required": true
        }
      ]
    },
    "schema-org:name": "Oauth 2.0 example",
    "schema-org:version": "v1"
  }
}