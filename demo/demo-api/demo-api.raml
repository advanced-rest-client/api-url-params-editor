#%RAML 1.0
title: Oauth 2.0 example
version: v1
baseUri: http://{host}.api.domain.com:8254/{apiVersion}/

baseUriParameters:
  host:
    type: string
    pattern: (production|development)
    description: Either `production` or `development`
  apiVersion:
    type: integer
    displayName: API version
    enum: [1, 2, 3]
    description: |
      API documentation version.
      Can be any of:
      - `1` - deprecated
      - `2` - scheduled to deprecate
      - `3` - current
traits:
  paginated:
    queryParameters:
      limit:
        required: false
        type: number
        description: Limit in the response list
        maximum: 300
        minimum: 1
        example: 100
        default: 25
      start:
        required: false
        type: number
        description: The start entry of the list
        minimum: 0
        example: 25
        default: 0
      nextPageToken:
        required: false
        type: string
        example: CiAKGjBpNDd2Nmp2Zml2cXRwYjBpOXA
        description: |
          The `nextPageToken` is a web safe encoded cursor to the next entry in the database.
          It can be obtained by requesting paginated resource and used in next request to get
          next results page.
        pattern: "[a-zA-Z0-9]+"
        displayName: Page token
securitySchemes:
  x1: !include securitySchemes/x-custom.raml
  x2: !include securitySchemes/x-other.raml
/simple:
  get:
    queryParameters:
      paramString:
        type: string
        displayName: String value
      param_number:
        type: number
        minimum: 20
        maximum: 100
  /{pathParam}:
    uriParameters:
      pathParam:
        type: string
        displayName: Path parameter
        enum: [value1, value2, value3]
        description: |
          This is test description with `markup`.
          This value can be one of:
          - `value1`
          - `value2`
          - `value3`
    get:
      queryParameters:
        limit: number
        items:
          type: string[]
/traits:
  get:
    is: [paginated]
    securedBy: [x1]
/security/{param}:
  securedBy: [x2]
  uriParameters:
    param:
      type: string
      description: |
        This is test description with `markup`.
        This value can be one of:
        - `value1`
        - `value2`
        - `value3`
        - any other value
  get:
    queryParameters:
      securityLevel: string
/complex:
  displayName: Complex route
  /path:
    get:
    /{to}:
      uriParameters:
        to:
          type: string
      get:
        is: [paginated]
        queryParameters:
          a: string
          b: string
      /endpoint:
        is: [paginated]
        securedBy: [x1]
        post:
          body:
            application/json:
              type: object
              properties:
                test: string
          responses:
            200:
              body:
                application/json:
                  type: object
                  properties:
                    error: boolean
/no-qp:
  get:
/plus:
  /{+page}:
    get:
/required-query-parameters:
  get:
    queryParameters:
      requiredString:
        type: string
        required: true

/optional-query-parameters:
  get:
    queryParameters:
      requiredString:
        type: string
        required: false
