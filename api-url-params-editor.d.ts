/**
 * DO NOT EDIT
 *
 * This file was automatically generated by
 *   https://github.com/Polymer/tools/tree/master/packages/gen-typescript-declarations
 *
 * To modify these typings, edit the source file(s):
 *   api-url-params-editor.js
 */


// tslint:disable:variable-name Describing an API that's defined elsewhere.
// tslint:disable:no-any describes the API as best we are able today

import {html, css, LitElement} from 'lit-element';

import {ValidatableMixin} from '@anypoint-web-components/validatable-mixin/validatable-mixin.js';

import {EventsTargetMixin} from '@advanced-rest-client/events-target-mixin/events-target-mixin.js';

declare namespace ApiElements {

  /**
   * `api-url-params-editor`
   * An element to render query / uri parameters form from AMF schema
   */
  class ApiUrlParamsEditor extends
    ValidatableMixin(
    EventsTargetMixin(
    Object)) {
    legacy: boolean|null|undefined;

    /**
     * When set, renders add custom parameter button in query parameters
     * form
     */
    allowCustom: boolean|null|undefined;

    /**
     * Computed by `api-view-model-transformer` qury parameters model.
     *
     * Note, this element won't accept AMF data.
     */
    queryModel: any[]|null|undefined;

    /**
     * Computed by `api-view-model-transformer` URI parameters model.
     *
     * Note, this element won't accept AMF data.
     */
    uriModel: any[]|null|undefined;

    /**
     * Map of uri parameters produced by this element.
     */
    uriValue: object|null|undefined;

    /**
     * Map of query parameters produced by this element.
     */
    queryValue: object|null|undefined;
    onurivalue: Function|null;
    onqueryvalue: Function|null;
    onurimodel: Function|null;
    onquerymodel: Function|null;

    /**
     * Computed value if the `queryParameters` are set.
     * Use `raml-request-parameteres-model` to compute this value.
     */
    _hasQueryParameters: boolean|null|undefined;

    /**
     * Computed value if the `uriParameters` are set.
     * Use `raml-request-parameteres-model` to compute this value.
     */
    _hasUriParameters: boolean|null|undefined;

    /**
     * Computed value if `uriParameters` or `queryParameters` are set.
     * Use `raml-request-parameteres-model` to compute this value.
     */
    _hasParameters: boolean|null|undefined;

    /**
     * Renders forms in "narrow" view
     */
    narrow: boolean|null|undefined;

    /**
     * Prohibits rendering of the documentation (the icon and the
     * description).
     */
    noDocs: boolean|null|undefined;

    /**
     * Enables compatibility with Anypoint components.
     */
    compatibility: boolean|null|undefined;

    /**
     * Enables Material Design outlined style
     */
    outlined: boolean|null|undefined;

    /**
     * When set the editor is in read only mode.
     */
    readOnly: boolean|null|undefined;

    /**
     * When set the editor disabled all controls
     */
    disabled: boolean|null|undefined;
    render(): any;

    /**
     * Registers an event handler for given type
     *
     * @param eventType Event type (name)
     * @param value The handler to register
     */
    _registerCallback(eventType: String|null, value: Function|null): void;
    _attachListeners(node: any): void;
    _detachListeners(node: any): void;

    /**
     * Handler for the `query-parameter-changed` custom event.
     * Updates model value from the event
     */
    _queryParamChangeHandler(e: CustomEvent|null): void;
    _uriParamChangeHandler(e: any): void;

    /**
     * Applies values from the change event to a model.
     *
     * @param detail Detail event object
     * @param type `uri` or `query`
     */
    _appyEventValues(detail: object|null, type: String|null): void;

    /**
     * Computes boolean value if the argument exists and has items.
     *
     * @param model Current url model.
     */
    _computeHasData(model: any[]|null, allowCustom: Boolean|null): Boolean|null;

    /**
     * Computes value for `hasParameters` property.
     *
     * @param qp State of `_hasQueryParameters`
     * @param up State of `_hasUriParameters`
     * @returns True if any of the arguments is true
     */
    _computeHasParameters(qp: Boolean|null, up: Boolean|null, allowCustom: Boolean|null): Boolean|null;

    /**
     * Overidden from ValidatableMixin. Will set the `invalid`
     * attribute automatically, which should be used for styling.
     */
    _getValidity(): Boolean|null;

    /**
     * Updates value for entire model.
     *
     * @param type Data model type. `query` or `uri`
     */
    _updateModelValue(type: String|null): void;
    _uriFormChange(e: any): void;
    _queryFormChange(e: any): void;
    _formChange(type: any, detail: any): void;
    _updatePropertyEnabled(model: any, values: any, detail: any): void;
    _updatePropertyName(values: any, detail: any): void;
    _updatePropertyValue(values: any, model: any, detail: any): void;
    _queryModelChange(e: any): void;
    _asyncValidate(): any;

    /**
     * Handler for the `query` event dispatchd from the query form.
     */
    _queryDeleted(e: CustomEvent|null): void;

    /**
     * Dispatches uri/query-parameter-changed custom event when model property change.
     *
     * @param type Model type, `uri` or `query`
     * @param item Changed item
     * @param removed True if the item has been removed from the UI
     */
    _notifyChange(type: String|null, item: object|null, removed: Boolean|null): void;
  }
}

declare global {

  interface HTMLElementTagNameMap {
    "api-url-params-editor": ApiElements.ApiUrlParamsEditor;
  }
}
