/**
 * DO NOT EDIT
 *
 * This file was automatically generated by
 *   https://github.com/Polymer/tools/tree/master/packages/gen-typescript-declarations
 *
 * To modify these typings, edit the source file(s):
 *   src/ApiUrlParamsForm.js
 */


// tslint:disable:variable-name Describing an API that's defined elsewhere.
// tslint:disable:no-any describes the API as best we are able today

import {html, LitElement} from 'lit-element';

import {ValidatableMixin} from '@anypoint-web-components/validatable-mixin/validatable-mixin.js';

import {ApiFormMixin} from '@api-components/api-form-mixin/index.js';

export {ApiUrlParamsForm};

/**
 * Renders form and input elements for query / uri model.
 *
 * Handles creation of form elements, validation, and rendering documentation.
 *
 * This element **requires** you to set `form-type` attribute to either
 * `uri` or `query` to distinguish type of form. Also, set `form-title`
 * property to render a title. It is useful when adding two forms right after
 * each other.
 *
 * ## Optional parameters
 *
 * By default the element renders all form valus. For better user experience,
 * set `allow-hide-optional` attribute to hide parameters that are optional.
 * It also renders checkbox to toggle optional parameters.
 *
 * You can also style inputs as defined in
 * [api-property-form-item](https://github.com/advanced-rest-client/api-property-form-item)
 * element documentation.
 */
declare class ApiUrlParamsForm extends LitElement {
  readonly styles: any;
  legacy: any;
  constructor();
  render(): any;
  _customInputTemplate(item: any, index: any): any;
  _formRowTemplate(item: any, index: any): any;

  /**
   * Computes documentation as a markdown to be placed in the `marked-element`
   *
   * @param item View model
   */
  _computeDocumentation(item: object|null): String|null;

  /**
   * Computes if model item has documentation to display.
   *
   * @param noDocs If set it always cancels docs
   * @param item Model item
   * @returns True if documentation can be rendered.
   */
  _computeHasDocumentation(noDocs: Boolean|null, item: object|null): Boolean|null;

  /**
   * Adds custom property to the list.
   */
  add(): void;

  /**
   * attribute automatically, which should be used for styling.
   */
  _getValidity(): any;
  _optionalHanlder(e: any): void;
  _enableCheckedHandler(e: any): void;
  _nameChangeHandler(e: any): void;
  _valueChangeHandler(e: any): void;
  _notifyChange(index: any, property: any, value: any, oldValue: any): void;

  /**
   * Handler for the docs toggle click.
   */
  _toggleItemDocs(e: CustomEvent|null): void;

  /**
   * Overrides `ApiFormMixin._removeCustom`.
   * Calls the super method and dispatches `delete` event.
   */
  _removeCustom(e: CustomEvent|null): void;
}
